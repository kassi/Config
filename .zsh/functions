# Tool for managing personal config files
# Basically a git command line tool with special settings.
function config() {
  /usr/bin/git --git-dir=$HOME/System/Config --work-tree=$HOME "$@"
}

function editconfig() {
  code $HOME/.config.code-workspace
}

# Print the path in a readable way
function path() {
  ruby -e 'require "pp"; pp ENV["PATH"].split(":")'
}

# Print a binary plist to stdout
function plist {
  a=${1:?plist file name missing}
  plutil -convert xml1 -o - $a
}

# Diff 2 binary plist files
function diffplist {
  a=$1
  b=${2:?"Usage: diffplist <plist-1> <plist-2>"}
  a1=$(mktemp)
  b1=$(mktemp)
  plutil -convert xml1 -o $a1 "$a"
  plutil -convert xml1 -o $b1 "$b"
  diff $a1 $b1
}

# Diff stdout output of 2 commands
function stdiff() {
  args=($@)
  for i in {1..${#args[@]}}; do
    if [[ ${args[$i]} = "--" ]]; then
      d=$i
    fi
  done
  if [[ -z $d ]]; then
    echo Usage: stdiff <cmd1> [arg ...] -- <cmd2> [arg ...]
    return
  fi
  set -x
  cmd1=(${args:0:$d-1})
  echo $cmd1
  cmd2=${args:$d}
  echo $cmd2
  tmp1=$(mktemp)
  tmp2=$(mktemp)
  IFS=''; { eval $cmd1 } | cat -
  IFS=''; { eval $cmd2 } | cat -
  echo $tmp1
  echo "----"
  cat $tmp1
  echo "===="
  echo $tmp2
  cat $tmp2
  echo $?
  if [[ $? == 0 ]]; then
    echo "null"
    diff $tmp1 $tmp2
  fi
  #rm $tmp1 $tmp2
}


# List chrome extensions
function google-chrome-list-extensions() {
  ext_path="$HOME/Library/ApplicationSupport/Google/Chrome/Default/Extensions"
  cd $ext_path
  for f in $(find . -maxdepth 3 -name manifest.json); do
    id=${f#./}
    id=${id%%/*}
    echo -n "$id # "
    cat $f | jq -r '.| "\(.name)"'
  done
}

function upload_gem() {
  name="$1"
  curl -X POST -u $USER -F "file=@${name}" https://gems.xing.com/upload
}
